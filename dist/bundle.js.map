{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://calculator/./src/script.ts"],"sourcesContent":["\nconst enum Operation {\n    None            = \"none\",\n    Ac              = \"AC\",\n    Sign            = \"+/-\",\n    Percent         = \"%\",\n    Divide          = \"รท\",\n    Multiplication  = \"x\",\n    Minus           = \"-\",\n    Plus            = \"+\",\n    Equal           = \"=\",\n}\nconst enum TypeButton {\n    None,\n    Digital,\n    Action,\n}\n\ntype Chain = {acc: number, val: number, opn: Operation};\n\nconst chain: Chain = {\n    acc: 0,\n    val: 0,\n    opn: Operation.None\n};\n\nlet previousKeyPress = TypeButton.None;\n\ndocument.addEventListener(\"click\", (event: Event) => {\n    if (event.target instanceof HTMLButtonElement) {\n        const display = (document.getElementById(\"display\") as HTMLDivElement);\n        const button = event.target;\n        const currOperation = (button.value as Operation);\n        // checking click to digital button or comma button\n        if (button.dataset.digit != undefined) {\n            if (previousKeyPress === TypeButton.Action) {\n                display.innerHTML = \"\";\n                previousKeyPress = TypeButton.Digital;\n            }\n            display.innerHTML = (display.innerHTML === \"0\" && button.value !== \",\") ? \"\" : display.innerHTML;\n\n            if (button.value === \",\") {\n                if (!/,/.test(display.innerHTML)) {\n                    display.innerHTML += button.value;\n                }\n            } else {\n                display.innerHTML += button.value;\n            }\n        }\n\n        // checking click to math operation button\n        if (button.dataset.action != undefined) {\n            // initialization of acc and op fields for structure \"Chain\"\n            if (chain.opn === Operation.None) {\n                chain.opn = currOperation;\n                chain.acc = toCalc(display.innerHTML);\n            } else {\n                // this branch is executed if previous button was digital button. \n                // This code relializes chain \"digit\" + \"math operation\" + \"digit\" + ...\n                if (previousKeyPress === TypeButton.Digital) {\n                    chain.val = toCalc(display.innerHTML);\n                    math_calculator(chain);\n                } else {\n                    // this is branch was added for realize functional of button \"equal\"\n                    if (currOperation === Operation.Equal) {\n                        math_calculator(chain);\n                    }\n                }\n                display.innerHTML = toDispay(chain.acc);\n                if (currOperation !== Operation.Equal) {\n                    chain.opn = currOperation;                    \n                }\n            }\n            if (currOperation === Operation.Sign) {\n                chain.acc = toCalc(display.innerHTML) * (-1);\n                display.innerHTML = toDispay(chain.acc);\n            }\n            if (currOperation === Operation.Percent) {\n                chain.val = 100;\n                chain.opn = Operation.Divide;\n                math_calculator(chain);\n                display.innerHTML = toDispay(chain.acc);\n            }\n            previousKeyPress = TypeButton.Action;\n        }\n    }\n});\n\nfunction math_calculator(chain: Chain): void {\n    switch (chain.opn) {\n        case Operation.Divide: chain.acc /= chain.val; break;\n        case Operation.Multiplication: chain.acc *= chain.val; break;\n        case Operation.Minus: chain.acc -= chain.val; break;\n        case Operation.Plus: chain.acc += chain.val; break;\n    }\n}\n\nfunction toCalc(value: string): number { \n    return Number(value.replace(\",\", \".\"));\n}\n\nfunction toDispay(value: number): string {\n    return Number(value.toPrecision(15)).toString().replace(\".\", \",\");\n}"],"names":[],"sourceRoot":""}