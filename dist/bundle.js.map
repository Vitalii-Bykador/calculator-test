{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://calculator/./src/script.ts"],"sourcesContent":["\nconst enum Operation {\n    None            = \"none\",\n    Ac              = \"AC\",\n    Sign            = \"+/-\",\n    Percent         = \"%\",\n    Divide          = \"÷\",\n    Multiplication  = \"x\",\n    Minus           = \"-\",\n    Plus            = \"+\",\n    Equal           = \"=\",\n}\nconst enum TypeKey {\n    None,\n    Digital,\n    Action,\n}\n\nconst chain: {\n    acc: number,\n    opn: Operation,\n} = {\n    acc: 0,\n    opn: Operation.None\n};\n\n// let flgClearDisplay = false;\n// let flgWhatKeyWasPress = \nlet previousKeyPress = TypeKey.None;\n\ndocument.addEventListener(\"click\", (event: Event) => {\n    if (event.target instanceof HTMLButtonElement) {\n        const display = (document.getElementById(\"display\") as HTMLDivElement);\n        const button = event.target;\n        // проверка \"клика\" по кнопке цифровой/кнопке с \",\"\n        if (button.dataset.digit != undefined) {\n            if (/*flgClearDisplay*/ previousKeyPress === TypeKey.Action) {\n                display.innerHTML = \"\";\n                //flgClearDisplay = false;\n                previousKeyPress = TypeKey.Digital;\n            }\n            display.innerHTML = (display.innerHTML === \"0\" && button.value !== \",\") ? \"\" : display.innerHTML;\n\n            if (button.value === \",\") {\n                if (!/,/.test(display.innerHTML)) {\n                    display.innerHTML += button.value;\n                }\n            } else {\n                display.innerHTML += button.value;\n            }\n        }\n\n        // проверка \"клика\" по кнопке с действием/математической операцией\n        if (button.dataset.action != undefined) {\n            if (chain.opn === Operation.None) {\n                chain.opn = (button.value as Operation);\n                chain.acc = toCalc(display.innerHTML);\n            } else {\n                if (previousKeyPress === TypeKey.Digital) {\n                    const val = toCalc(display.innerHTML);\n                    switch (chain.opn) {\n                    case Operation.Divide: chain.acc /= val; break;\n                    case Operation.Multiplication: chain.acc *= val; break;\n                    case Operation.Minus: chain.acc -= val; break;\n                    case Operation.Plus: chain.acc += val; break;\n                    }\n                }\n                display.innerHTML = toDispay(chain.acc);\n                chain.opn = (button.value as Operation);\n            }\n            //flgClearDisplay = true;\n            previousKeyPress = TypeKey.Action;\n        }\n    }\n});\n\nfunction toCalc(value: string): number { \n    return Number(value.replace(\",\", \".\"));\n}\n\nfunction toDispay(value: number): string {\n    return Number(value.toPrecision(15)).toString().replace(\".\", \",\");\n}"],"names":[],"sourceRoot":""}